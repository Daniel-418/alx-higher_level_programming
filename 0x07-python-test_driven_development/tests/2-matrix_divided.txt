Source file: 2-matrix_divided.py

Import the function:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Create a matrix:
>>> matrix = [[2, 4, 6], [10, 12, 24], [26, 88, 42]]

TESTS
-----

Integers:
>>> matrix_divided(matrix, 2)
[[1.0, 2.0, 3.0], [5.0, 6.0, 12.0], [13.0, 44.0, 21.0]]

Floats:
>>> matrix_divided(matrix, 0.5)
[[4.0, 8.0, 12.0], [20.0, 24.0, 48.0], [52.0, 176.0, 84.0]]


Valid Arguments:
----------------
* Lists of list:

>>> matrix_divided([2, 3, 4], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix(list of lists) of integers/floats


* Lists of lists of non integer or float:

>>> matrix_divided([[None, "hi", (2, 3, 4)], ["first argument", "second argument", "third argument"]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix(list of lists) of integers/floats


* Matrix with uneven row size of elements

>>> matrix_divided([[1, 2, 3], [1], [1, 2]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


* non-int div:

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], "hi")
Traceback (most recent call last):
...
TypeError: div must be a number


* zero div:

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
