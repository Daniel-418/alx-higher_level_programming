Test for "7-base_geometry.py"
-----------------------------
-----------------------------

This test file tests the "integer validator"
function present in the file to be tested

Importing the function:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Creating a BaseGeometry object:
	>>> bg = BaseGeometry()

Testing for area:
	>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented
Testing for normal values:
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)
	>>> bg.integer_validator("any_int", 100)

Testing for a non_ints:
	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer
	
	>>> bg.integer_validator("name", None)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer
	
	>>> bg.integer_validator("name", 4.5)
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

Testing for 0:
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

Testing for a negative int:
	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	...
	ValueError: distance must be greater than 0

